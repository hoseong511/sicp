(define (fast-mul-recur x n)
	(define (even? n)
		(= (remainder n 2) 0))
	(define (double a)
		(+ a a))
	(display x)
	(newline)
	(cond	((= n 0) 0)
			((even? n) (double (fast-mul-recur x (/ n 2))))
			(else (+ x (fast-mul-recur x (- n 1))))))

(define (fast-mul-recur2 x n)
	(define (even? n)
		(= (remainder n 2) 0))
	(define (double a)
		(+ a a))
	(display x)
	(newline)
	(cond	((= n 0) 0)
			((even? n) (fast-mul-recur2 (double x) (/ n 2)))
			(else (+ x (fast-mul-recur2 x (- n 1))))))